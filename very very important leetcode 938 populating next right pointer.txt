****************************very very important populating next right pointer leetcode 938 *********************************
*********************question tells how to use parent pointer  *********************************







/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
     if(root==NULL)
     {
         return NULL;
     }
       connect(root,NULL);
      return root;  
    }
   void connect(Node* node, Node* parent)
    {
        if(!parent) node->next = NULL;
        else if(parent->left==node)
        {
            node->next=parent->right;
        }
        else if(parent->right==node)
        {
            node->next=parent->next?parent->next->left:NULL;
        }
        if(node->left)
        {connect(node->left, node);
            connect(node->right, node);
            
        }
        
    }
};