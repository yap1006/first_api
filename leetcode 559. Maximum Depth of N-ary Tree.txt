******************************* leetcode 559. Maximum Depth of N-ary Tree************************************


******************************level order traversal method*********************

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:vector<vector<int>> val;
    int maxDepth(Node* root) {
        levelorder(root,0);
        return val.size();
    }
    void levelorder(Node* root,int level)
    {
        if(root==NULL)
        {
            return;
        }
        if(val.size()==level)
        {
            vector<int> temp;
            val.push_back(temp);
        }
        val[level].push_back(root->val);
      for(auto ch:root->children)
      { levelorder(ch,level+1);}
    }
};


****************************************************** for loop soultion   ******************************************************


// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    int maxDepth(Node* root) {
        if(root==NULL)
        {
            return 0;
        }
        int depth = 0;
        for(auto ch:root->children)
        {
            depth=max(depth,maxDepth(ch));
        }
        return depth+1;
    }
};