************************ important question leetcode 173 bst iterator *************************************
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class BSTIterator {
    private :
    vector<int> v;
    int current=0;
public:
    void inorder(TreeNode *root,vector<int> &v)
    {
        if(root==NULL)
        {
            return;
        }
        if(root->left)
        {
            inorder(root->left,v);
        }
        v.push_back(root->val);
        if(root->right)
        {
            inorder(root->right,v);
        }
    }
    BSTIterator(TreeNode* root) {
        inorder(root,v);
        current=-1;
    }
    
    /** @return the next smallest number */
    int next() {
        current++;
        return v[current];
    }
    
    /** @return whether we have a next smallest number */
    bool hasNext() {
        if(current+1<v.size())
        {
            return true;
        }
        return false;
            
    }
};

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator* obj = new BSTIterator(root);
 * int param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */