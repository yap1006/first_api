*****************************heap solution for kth largest element
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        make_heap(nums.begin(),nums.end());
        for (int i=1;i<k;i++){
            pop_heap(nums.begin(),nums.end());
            nums.pop_back();
        }
        return nums.front();
        
    }
};


******************************using min heap******************************
class Solution {
public:
    
    int findKthLargest(vector<int>& nums, int k) {
       priority_queue<int, vector<int>, greater<int>> pq;
        for(int i = 0;i<k;i++)
            pq.push(nums[i]);
        
        for(int i=k;i<nums.size();i++)
        {
            if(nums[i]>pq.top())
            {
                pq.push(nums[i]);
                pq.pop();
            }
        }
        
        return pq.top();
    }
};