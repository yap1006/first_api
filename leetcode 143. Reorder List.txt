********************** leetcode 143. Reorder List **********************
class Solution {
public:
    void reorderList(ListNode* head) 
    {
       if(head==NULL or head->next==NULL)
       {
           return ;
       }
        ListNode*l1=head;
        ListNode* slow=head;
        ListNode* prev =NULL;
        ListNode* fast =head;
        while(fast!=NULL and fast->next!=NULL)
        {
            prev=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        prev->next =NULL;
        ListNode* l2=rev(slow);
        merge(l1,l2);
        
    }
    ListNode* rev(ListNode* head) {
        ListNode* curr =head;
        ListNode* prev=NULL;
        while(curr!=NULL)
        {
            ListNode* n=curr->next;
            curr->next=prev;
            prev=curr;
            curr=n;
        }
        head=prev;
        return head;
    }
    void merge(ListNode* l1,ListNode* l2)
    {
        while(l1!=NULL)
        {
            ListNode* l1_next=l1->next;
            ListNode* l2_next=l2->next;
            l1->next=l2;
            if(l1_next==NULL)
            {
                break;
            }
            l2->next=l1_next;
            l1=l1_next;
            l2=l2_next;
        }
    }
   
};