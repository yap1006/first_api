*************************************leetcode 437 path sum*****************************
Same concept as Subarray Sum Equals K, Contiguous Array probem.




/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:int count =0;
    int pathSum(TreeNode* root, int sum) 
    {
  int res=0;
        int add=0;
        unordered_map<int,int> prefix = {{0,1}};
        find(root, sum, res, prefix, add);
        return res;
    }
    void find(TreeNode* root, int target, int& res, unordered_map<int,int> prefix, int& add)
    {
        if(root==NULL)
        {
            return ;
        }
        add+=root->val;
        if(prefix.count(add-target))
        {
            res+=prefix[add-target];
        }
        prefix[add]++;
        find(root->left, target, res, prefix, add);
        find(root->right, target, res, prefix, add);
        prefix[add]--;
        if(prefix[add] == 0){
            prefix.erase(add);
        }
        add -= root->val;
    }
    
};